generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model client {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(255)
  address    String   @db.VarChar(255)
  phone      String   @db.VarChar(255)
  email      String   @db.VarChar(255)
  company_id String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  company    company  @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model company {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?     @db.VarChar(255)
  name        String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  user_id     String      @db.Uuid
  tenant_id   String      @db.VarChar(255)
  client      client[]
  user        user        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  inventory   inventory[]
  shipment    shipment[]
  warehouse   warehouse[]
}

model inventory {
  id                  String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_name        String     @db.VarChar(255)
  product_description String?    @db.VarChar(255)
  quantity            Int
  company_id          String     @db.Uuid
  received_date       DateTime?  @db.Timestamp(6)
  created_at          DateTime   @default(now()) @db.Timestamp(6)
  updated_at          DateTime   @default(now()) @db.Timestamp(6)
  company             company    @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  shipment            shipment[]
}

model shipment {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  shipment_status String    @db.VarChar(255)
  dispatch_date   DateTime? @db.Timestamp(6)
  arrival_date    DateTime? @db.Timestamp(6)
  inventory_id    String    @db.Uuid
  company_id      String    @db.Uuid
  created_at      DateTime  @default(now()) @db.Timestamp(6)
  updated_at      DateTime  @default(now()) @db.Timestamp(6)
  company         company   @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  inventory       inventory @relation(fields: [inventory_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  company     company[]
}

model warehouse {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name              String   @db.VarChar(255)
  location          String   @db.VarChar(255)
  capacity          Int
  current_inventory Int
  company_id        String   @db.Uuid
  created_at        DateTime @default(now()) @db.Timestamp(6)
  updated_at        DateTime @default(now()) @db.Timestamp(6)
  company           company  @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
